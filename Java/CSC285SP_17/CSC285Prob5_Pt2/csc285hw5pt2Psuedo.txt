package CSC285Prob5_Pt2;

import java.io.*;
import java.util.*;

import CSC285Prob5_Pt2.LinkManager;

/*
 * Russell Ferguson
 * March 24, 2017
 * CSC285 Data Structures - Kent Pickett
 */
public class CSC285Prob5_Pt2 {
	//Make 3 static constant 2 by 2 arrays for getVal on arrays represented by a CHAR
	static double a[][]=	{{1, 2},{3, 4}};
	static double b[][]=	{{6, 6},{8, 8}};
	static double c[][]=	{{1, 2},{2, 1}};
	
	public static void main(String[] args){
		LinkManager<Character> oprtrStack = new LinkManager<Character>();
		LinkManager<double[][]> oprndStack = new LinkManager<double[][]>();
		
		char[] expr1 = "2*A-3*((B-2*C)/(A+3)-B*3)".toCharArray();
		for(int i = 0; i<expr1.length;i++){
			if(Character.isDigit(expr1[i])){ //is a digit, push on oprnd
			}else if(Character.isAlphabetic(expr1[i])){  //is a letter variable, getVal and push oprnd
			}else if(expr1[i]=='('){  //beginning of () set expr, push oprtr
			}else if(expr1[i]==')'){  //end of () set expr, evaluate, pop ( at end
			}else{
				//another operator, get priority of it, evaluate oprtrStack
				//if it has an oprtr and of greater priority
				//then push the operator you found after evaluating
				//greater operators that were on the stack
			}
		}
		//eval the rest of the stuff on the stack until one operand remains, print
		
		//Stick results from stack onto a variable and print
		double[][] End = oprndStack.peek();
		System.out.printf("Result:\n\n%f\t%f\n%f\t%f", End[0][0], End[0][1], End[1][0], End[1][1]);
	}
	//have 4 doubles, calculate each one with operand1 operator operand2, with switch case
	//each double represents a position out of 4 positions on 2 by 2 array
	//return {{w,x},{y,z}}
	public static double[][] eval(char oprtr, double[][] oper1, double[][] oper2){}
	
	//operates on an expression by popping off stacks, calling eval and pushes the operand result on the stack
	public static void evalExpr(LinkManager<double[][]> oprnds, LinkManager<Character> oprtrs){}

	//gets array constant and returns it, with case switch
	public static double[][] getVal(Character chara){}

	//gets priority value from operator
	public static int getPrio(Character chara){}
